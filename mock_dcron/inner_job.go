// Code generated by MockGen. DO NOT EDIT.
// Source: inner_job.go

// Package mock_dcron is a generated GoMock package.
package mock_dcron

import (
	gomock "github.com/golang/mock/gomock"
	cron "github.com/robfig/cron/v3"
	reflect "reflect"
)

// MockEntryGetter is a mock of EntryGetter interface
type MockEntryGetter struct {
	ctrl     *gomock.Controller
	recorder *MockEntryGetterMockRecorder
}

// MockEntryGetterMockRecorder is the mock recorder for MockEntryGetter
type MockEntryGetterMockRecorder struct {
	mock *MockEntryGetter
}

// NewMockEntryGetter creates a new mock instance
func NewMockEntryGetter(ctrl *gomock.Controller) *MockEntryGetter {
	mock := &MockEntryGetter{ctrl: ctrl}
	mock.recorder = &MockEntryGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockEntryGetter) EXPECT() *MockEntryGetterMockRecorder {
	return m.recorder
}

// Entry mocks base method
func (m *MockEntryGetter) Entry(id cron.EntryID) cron.Entry {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Entry", id)
	ret0, _ := ret[0].(cron.Entry)
	return ret0
}

// Entry indicates an expected call of Entry
func (mr *MockEntryGetterMockRecorder) Entry(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Entry", reflect.TypeOf((*MockEntryGetter)(nil).Entry), id)
}
